version: "3.8"

services:
  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend
  #     target: ${NODE_ENV:-development}
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=${NODE_ENV}
  #     - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
  #     # - WATCHPACK_POLLING=${WATCHPACK_POLLING}
  #   depends_on:
  #     - backend

  backend:
    build:
      context: ./backend
      target: ${NODE_ENV:-development}
    container_name: backend
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:latest
    restart: always
    shm_size: 128mb
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:
